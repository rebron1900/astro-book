---
// OGCard.astro
// 用法：<OGCard href="https://neodb.social/movie/xxx" />

export interface Props {
    href: string;
}

const { href } = Astro.props;

/* 1. 白名单正则：4 种链接 */
const ALLOWED_REGEX = /^(https?:\/\/)?(www\.)?(neodb\.social\/(tv\/season|movie|book)\/[\w\-]+|github\.com\/[^\/]+\/[^\/]+|bilibili\.com\/video\/[\w\-]+\/?)$/i;

if (!ALLOWED_REGEX.test(href)) return null;

/* 2. 根据域名决定如何取元数据 */
let og: {
    title?: string;
    description?: string;
    image?: string;
    siteName?: string;
} = {};

try {
    const url = new URL(href);
    const html = await fetch(href, {
        headers: { 'User-Agent': 'Astro-OGCard/1.0' }
    }).then((r) => r.text());

    /* 2.1 通用解析器：从 <meta property="og:*"> 拿数据 */
    const getMeta = (prop: string) => html.match(new RegExp(`<meta\\s+property=["']og:${prop}["']\\s+content=["'](.*?)["']`, 'i'))?.[1] || '';

    /* 2.2 针对 B 站做特殊处理（B 站 og:image 有水印，改用封面图） */
    if (url.hostname.includes('bilibili.com')) {
        const bvid = url.pathname.match(/\/video\/([^\/]+)/)?.[1];
        const api = `https://api.bilibili.com/x/web-interface/view?bvid=${bvid}`;
        const json = await fetch(api).then((r) => r.json());
        og.title = json.data?.title || getMeta('title');
        og.description = json.data?.desc || getMeta('description');
        og.image = json.data?.pic || getMeta('image');
        og.siteName = '哔哩哔哩';
    } else {
        /* 2.3 其余站点（NeoDB / GitHub）直接走通用解析 */
        og.title = getMeta('title') || getMeta('site_name') || url.hostname;
        og.description = getMeta('description');
        og.image = getMeta('image');
        og.siteName = getMeta('site_name') || url.hostname;
    }
} catch {
    return null;
}

if (!og.title) return null;
---

<a href={href} target="_blank" rel="noopener noreferrer" class="og-card">
    {
        og.image && (
            <div class="og-image">
                <img src={og.image} alt={og.title} loading="lazy" />
            </div>
        )
    }

    <div class="og-body">
        <p class="og-title">{og.title}</p>
        {og.description && <p class="og-desc">{og.description}</p>}
        <p class="og-site">{og.siteName}</p>
    </div>
</a>

<style>
    .og-card {
        display: flex;
        gap: 0.75rem;
        border: 1px solid #e5e7eb;
        border-radius: 0.5rem;
        padding: 0.75rem;
        text-decoration: none;
        color: inherit;
        transition: box-shadow 0.15s;
        max-width: 100%;
    }
    .og-card:hover {
        box-shadow: 0 4px 14px rgba(0, 0, 0, 0.08);
    }

    .og-image {
        flex-shrink: 0;
        width: 120px;
        height: 80px;
        overflow: hidden;
        border-radius: 0.375rem;
    }
    .og-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .og-body {
        flex: 1;
        min-width: 0;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    .og-title {
        font-weight: 600;
        font-size: 1rem;
        line-height: 1.25;
        margin: 0 0 0.25rem;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .og-desc {
        font-size: 0.875rem;
        color: #6b7280;
        margin: 0 0 0.25rem;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .og-site {
        font-size: 0.75rem;
        color: #9ca3af;
        margin: 0;
    }

    /* 移动端：图片在上，文字在下 */
    @media (max-width: 480px) {
        .og-card {
            flex-direction: column;
        }
        .og-image {
            width: 100%;
            height: auto;
            aspect-ratio: 16 / 9;
        }
    }
</style>

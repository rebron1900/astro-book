---
import Activitypub from './Activitypub.astro';
const { postID } = Astro.props;
---

<div id="activitypub" data-postid={postID}>
    <div>
        <h3 class="card-title">来自联邦宇宙的回应</h3>
    </div>

    <div class="social-interactions">
        <ol class="discussion-avatar-list"></ol>
        <div class="social-note">
            在 Mastodon 实例上搜索此 URL 来回复 (<a href="https://www.eallion.com/fediverse/" target="_blank">联邦宇宙及Mastodon简介 by eallion</a>)<br />
            <code>https://social.1900.live/@1900/statuses/</code>
        </div>
    </div>
</div>

<div id="comments">
    <div>
        <h3 id="join-comments" class="card-title">加入评论</h3>
    </div>
    <div class="at-comments"></div>
</div>

<script>
    import 'artalk/dist/Artalk.css';
    import Artalk from 'artalk';
    import cocoMessage from '../utils/coco-message';
    import loadInteractions from '../utils/acitivitypub';

    const commentinfo = { type: 'artalk', name: "1900'Blog", server: 'https://artalk.1900.live', el: '.at-comments' };

    const isExternalLink = (url: string): boolean => {
        try {
            const parsedUrl = new URL(url); // 可能抛异常
            const blogHostname = location.hostname; // 当前站点的主机名

            // 判断是否为站内链接（含 www 子域）
            return parsedUrl.hostname === blogHostname || parsedUrl.hostname === `www.${blogHostname}`;
        } catch {
            // 解析失败 → 不是合法 URL，直接返回 false
            return false;
        }
    };
    document.addEventListener('astro:page-load', () => {
        if (!document.querySelector(commentinfo.el)) return;
        const artalk = Artalk.init({
            el: commentinfo.el, // 绑定元素的 Selector
            server: commentinfo.server, // 后端地址
            site: commentinfo.name, // 你的站点名
            pageKey: document.location.pathname
        });

        loadInteractions();

        artalk.on('comment-inserted', function () {
            cocoMessage.insertCSS();
            cocoMessage.success('感谢你发表的想法 💖');
        });

        artalk.on('list-loaded', () => {
            document.querySelectorAll('.atk-comment a').forEach((i) => {
                i.href = isExternalLink(i.href) ? i.href : `/golink?target=${btoa(encodeURIComponent(i.href))}`;
            });
        });
    });
</script>

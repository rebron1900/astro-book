---
import { ViewTransitions } from 'astro:transitions';
import { settings } from '../data/ghost-store';
import { normalizeSlug, normalizeData } from '../utils/help';

const { post, title, url } = Astro.props;

let og_title,
    og_desc,
    og_url,
    og_img = '';

if (post) {
    og_title = post.title;
    og_url = normalizeSlug(post.slug);
    og_desc = post.excerpt.replace(/[\r\n]+/g, '').substring(0, 100);
    og_img = encodeURI(
        `https://og.190102.xyz/api/og?title=${encodeURIComponent(og_title)}&desc=${encodeURIComponent(og_desc)}&date=${normalizeData(post?.published_at)}`
    );
} else {
    og_title = settings?.title;
    og_desc = settings?.description.replace(/[\r\n]+/g, '');
    og_url = import.meta.env.SITE;
    og_img = `https://og.190102.xyz/api/og?title=${encodeURIComponent(og_title)}&desc=${encodeURIComponent(og_desc)}&date=1900-01-01`;
}
---

<title>{title}</title>

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="description" content={og_desc} />
<meta name="theme-color" media="(prefers-color-scheme: light)" content="#ffffff" />
<meta name="theme-color" media="(prefers-color-scheme: dark)" content="#343a40" />
<meta name="color-scheme" content="light dark" />

<!-- Facebook Meta Tags -->
<meta property="og:url" content={og_url} />
<meta property="og:type" content="website" />
<meta property="og:title" content={og_title} />
<meta property="og:description" content={og_desc} />
<meta property="og:image" content={og_img} />

<!-- Twitter Meta Tags -->
<meta name="twitter:card" content="summary_large_image" />
<meta property="twitter:domain" content={import.meta.env.SITE} />
<meta property="twitter:url" content={og_url} />
<meta name="twitter:title" content={og_title} />
<meta name="twitter:description" content={og_desc} />
<meta name="twitter:image" content={og_img} />

<ViewTransitions />

<link rel="sitemap" type="application/xml" title={`${settings?.title}的站点地图`} href="/sitemap-index.xml" />
<link rel="alternate" type="application/rss+xml" title={`${settings?.title}的Rss`} href="/rss.xml" />
<link rel="icon" href="/logo.svg" />
<link rel="canonical" href={og_url} />

<script is:inline>
    const changeTheme = () => {
        const theme = localStorage.theme;
        if (localStorage.theme !== 'auto') {
            document.documentElement.classList.add(theme);
            document.documentElement.setAttribute('data-theme', theme);

            localStorage.theme = theme;
            localStorage.themetype = localStorage.themetype || 'light';
        } else {
            const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)').matches;
            localStorage.themetype = prefersDarkScheme ? 'dark' : 'light';
        }

        localStorage.name = localStorage.name || '自适应';
        localStorage.theme = theme || 'auto';
    };

    changeTheme();

    document.addEventListener('astro:page-load', () => {
        changeTheme();
    });
</script>

<script>
    import mediumZoom from 'medium-zoom';
    import tippy from 'tippy.js';

    import 'tippy.js/dist/tippy.css';
    import 'medium-zoom/dist/style.css';

    const initZoom = () => {
        // 选择所有未初始化的图片
        const images = document.querySelectorAll('.markdown img:not([data-zoom-initialized])');

        // 应用 mediumZoom 并标记已初始化的图片
        images.forEach((img) => {
            mediumZoom(img, {
                background: 'rgba(0,0,0,0.75)'
            });
            img.setAttribute('data-zoom-initialized', 'true'); // 标记为已初始化
        });
    };

    const initTOP = () => {
        const scrollToTopBtn = document.getElementById('scrollToTop');

        scrollToTopBtn?.addEventListener('click', () => {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        });

        window.onscroll = function () {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                scrollToTopBtn.style.display = 'block';
            } else {
                scrollToTopBtn.style.display = 'none';
            }
        };
    };

    const initGallery = () => {
        var gallery = document.querySelectorAll('.kg-gallery-image img');
        gallery.forEach(function (e) {
            var fix = function () {
                var l = e.closest('.kg-gallery-image'),
                    a = e.naturalWidth / e.naturalHeight; // 使用 naturalWidth 和 naturalHeight
                l.style.flex = a + ' 1 0%';
            };

            if (e.complete) {
                fix();
            } else {
                e.addEventListener('load', fix);
            }
        });
        // var gallery = document.querySelectorAll('.kg-gallery-image img');
        // gallery.forEach(function (e) {
        //     e.onload = function () {
        //         var l = e.closest('.kg-gallery-image'),
        //             a = e.naturalWidth / e.naturalHeight; // 使用 naturalWidth 和 naturalHeight
        //         l.style.flex = a + ' 1 0%';
        //     };
        // });
        // document.querySelectorAll('.kg-gallery-image img').forEach(function (e) {
        //     var t = e.closest('.kg-gallery-image'),
        //         a = e.width / e.height;
        //     t.style.flex = a + ' 1 0%';
        // });
        // !(function (e, t) {
        //     t.addEventListener('DOMContentLoaded', function () {
        //         t.querySelectorAll('.kg-gallery-image img').forEach(function (e) {
        //             var t = e.closest('.kg-gallery-image'),
        //                 a = e.attributes.width.value / e.attributes.height.value;
        //             t.style.flex = a + ' 1 0%';
        //         });
        //     });
        // })(window, document);
    };

    const changeTheme = () => {
        const theme = localStorage.theme;
        if (localStorage.theme !== 'auto') {
            document.documentElement.classList.add(theme);
            document.documentElement.setAttribute('data-theme', theme);

            localStorage.theme = theme;
            localStorage.themetype = localStorage.themetype || 'light';
        } else {
            const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)').matches;
            localStorage.themetype = prefersDarkScheme ? 'dark' : 'light';
        }

        localStorage.name = localStorage.name || '自适应';
        localStorage.theme = theme || 'auto';
    };

    document.addEventListener('astro:after-swap', () => {
        changeTheme();
    });

    document.addEventListener('astro:page-load', () => {
        initZoom();
        initTOP();
        initGallery();

        // Scroll to top function

        const relitu = tippy('.item-info', {
            allowHTML: true,
            interactive: true,
            maxWidth: 'none',
            theme: 'auto',
            appendTo: () => document.body
        });
    });

    document.body.addEventListener('htmx:afterSwap', function (event) {
        document.querySelector('.btn-more')?.remove();
        initZoom();
    });
</script>

---
import { pages, settings, neodb } from '../data/ghost-store.js';
import { doubanGroupByDate, getSvg } from '../utils/help.js';

import BaseLayout from '../layouts/BaseLayout.astro';
import Head from '../components/Head.astro';
import Comments from '../components/Comments.astro';
import Relitu from '../components/Relitu.jsx';
import Header from '../components/Header.astro';
import Top from '../components/Top.astro';
import Menu from '../components/Menu.astro';
import { Markup } from 'astro-remote';
import CodeSlot from '../components/CodeSlot.astro';
import IFrameSlot from '../components/IFrameSlot.astro';
import RemotePicture from '../components/RemotePicture.astro';
import Columns from '../components/shortcode/Columns.astro';
import Details from '../components/shortcode/Details.astro';
import Link from '../components/shortcode/Link.astro';
import PostMeta from '../components/PostMeta.astro';


const pageDouban = pages.find((post) => post.slug == 'douban');
const groupdata = doubanGroupByDate(neodb.data);

let index=0
---

<BaseLayout post={pageDouban}>
    <Head slot="head" post={pageDouban} site={settings} title={pageDouban?.title + ' | ' + settings?.title + ' - ' + settings?.description} />

    <Header slot="header" title={pageDouban.title} />
    <Menu slot="menu" />

    <article slot="content" class="markdown book-article">
        <h1 class="book-title">{pageDouban.title}</h1>
        <PostMeta post={pageDouban} isFeature={true} />

        {
            pageDouban.html && (
                <Markup
                    content={pageDouban.html}
                    sanitize={{ allowComponents: true, allowCustomElements: true }}
                    components={{ pre: CodeSlot, img: RemotePicture, iframe: IFrameSlot, details: Details, columns: Columns, a: Link }}
                />
            )
        }

        <div class="db--container" x-data="douban">
            <nav class="db--nav">
                <div class="db--navItem current" data-type="all">All</div>
                <div class="db--navItem" data-type="movie">Movie</div>
                <div class="db--navItem" data-type="tv">TV</div>
                <div class="db--navItem" data-type="book">Book</div>
                <div class="db--navItem" data-type="game">Game</div>
                <div class="db--navItem" data-type="music">Music</div>
                <div class="db--navItem" data-type="podcast">Podcast</div>
            </nav>

            <div class="db--genres"></div>
            <div class="db--list db--list__card " id="db--list__card">
                {
                    groupdata.map((post) =>
                        post.data.map((month) => (
                            <div class="db--listBydate" title={index} style={index > 3 ? 'view-transition-name:none': index++}>
                                <div class="db--titleDate">
                                    <div class="db--titleDate__day">{month.month}</div>
                                    <div class="db--titleDate__month">{post.year}</div>
                                </div>
                                <div class="db--dateList__card" >
                                    {month.data &&
                                        month.data.map((monthdata) => (
                                            <div class="db--item" data-itemtype={monthdata.type}>
                                                {monthdata.comment_text && (
                                                    <span class="db--icon-comment" data-tippy-content={monthdata.comment_text}>
                                                        <Fragment set:html={getSvg('comment')} />
                                                    </span>
                                                )}

                                                <img
                                                    loading="lazy"
                                                    src={`https://images.weserv.nl/?url=${monthdata.item.cover_image_url}&w=180&fit=cover`}
                                                    class="db--image"
                                                />
                                                <div class="db--score">
                                                    <svg width="12" height="12" viewBox="0 0 24 24" fill="currentColor">
                                                        <path d="M12 20.1l5.82 3.682c1.066.675 2.37-.322 2.09-1.584l-1.543-6.926 5.146-4.667c.94-.85.435-2.465-.799-2.567l-6.773-.602L13.29.89a1.38 1.38 0 0 0-2.581 0l-2.65 6.53-6.774.602C.052 8.126-.453 9.74.486 10.59l5.147 4.666-1.542 6.926c-.28 1.262 1.023 2.26 2.09 1.585L12 20.099z" />
                                                    </svg>
                                                    {monthdata.rating_grade || '无评分'} · {monthdata.type.charAt(0).toUpperCase() + monthdata.type.slice(1)}
                                                </div>
                                                <div class="db--title ellipsis">
                                                    <a href={monthdata.item.id} target="_blank" title={monthdata.item.title}>
                                                        {monthdata.item.title}
                                                    </a>
                                                </div>
                                            </div>
                                        ))}
                                </div>
                            </div>
                        ))
                    )
                }
            </div>

            <script src="https://unpkg.com/htmx.org@2.0.2"></script>
            <script>
                import 'https://unpkg.com/htmx.org@2.0.2';
                import tippy from 'tippy.js';
                const douban = {
                    change: function (type) {
                        // 选择所有具有data-itemtype属性的元素
                        const elements = document.querySelectorAll('[data-itemtype]');

                        // 遍历这些元素
                        elements.forEach(function (el) {
                            // 检查data-itemtype的值是否不等于'book'
                            const t = el.getAttribute('data-itemtype');
                            if (type == 'all') {
                                el.style.display = '';
                                return;
                            }
                            if (t !== type) {
                                // 如果不等于，隐藏该元素
                                el.style.display = 'none';
                            } else {
                                el.style.display = '';
                            }
                        });
                        this.hidden();
                    },
                    hidden: function () {
                        const cardElements = document.querySelectorAll('.db--listBydate');

                        cardElements.forEach(function (card) {
                            // 检查db--dateList__card类下的子元素是否全部被隐藏
                            let allHidden = true;
                            card.querySelectorAll('.db--item').forEach(function (dateListCard) {
                                // 如果存在任何未隐藏的子元素，则将allHidden设置为false
                                if (dateListCard.style.display !== 'none') {
                                    allHidden = false;
                                    card.style.display = '';
                                }
                            });

                            // 如果所有子元素都被隐藏，则隐藏db--list__card元素
                            if (allHidden) {
                                card.style.display = 'none';
                            }
                        });
                    },
                    active: function (el) {
                        document.querySelectorAll('.db--navItem').forEach(function (item) {
                            item.classList.remove('current');
                        });
                        el.classList.add('current');
                    }
                };

                document.addEventListener('astro:page-load', () => {
                    tippy('.db--icon-comment', {
                        placement: 'bottom',
                        maxWidth: 300
                    });

                    document.querySelectorAll('.db--navItem').forEach((el) => {
                        el.addEventListener('click', function (e) {
                            douban.change(e.target.dataset.type);
                            douban.active(e.currentTarget);
                        });
                    });
                });
            </script>

            <div class="block-more block-more__centered">
                <div class="lds-ripple"></div>
            </div>
        </div>
    </article>

    <Comments slot="comments" />

    <Relitu slot="relitu" />

    <Fragment slot="toc">
        <Top />
    </Fragment>
</BaseLayout>

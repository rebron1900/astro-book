---
import { pages, settings, neodb } from '../utils/ghost-store.js';
import { doubanGroupByDate } from '../utils/help.js';

import RemotePicture from '../components/RemotePicture.astro';
import BaseLayout from '../layouts/BaseLayout.astro';
import Head from '../components/Head.astro';
import Comments from '../components/Comments.astro';
import Toc from '../components/Toc.astro';
import Relitu from '../components/Relitu.jsx';
import TocTagloop from '../components/TocTagloop.astro';
import Header from '../components/Header.astro';
import Top from '../components/Top.astro';
import Menu from '../components/Menu.astro';
import initMap from '../utils/map';
import { Markup } from 'astro-remote';

const page = pages.find((post) => post.slug == 'map');

import HTML from 'html-parse-stringify';
var ast = HTML.parse(page?.html);
let fatherList = '';
function findTextNodes(node, text) {
    let result = [];
    fatherList += text;

    // 检查当前节点
    if (node.type === 'text' && node.content.startsWith('[[') && !fatherList.endsWith('precode')) {
        node.content = node.content.replace('[[', '<a>test').replace(']]', '</a>');
        result.push(node);
    }

    // 如果有子节点，递归遍历
    if (node.children) {
        node.children.forEach((child) => {
            result = result.concat(findTextNodes(child, node.name));
        });
    }

    return result;
}

const result = [];

ast.forEach((node) => {
    const temp = findTextNodes(node, node.name);
    let fatherList = '';
});

const html = HTML.stringify(ast);
---

<BaseLayout post={page}>
    <Head slot="head" post={page} site={settings} title={page?.title + ' | ' + settings?.title + ' - ' + settings?.description} />

    <Header slot="header" title={page.title} />
    <Menu slot="menu" />

    <article slot="content" class="markdown book-article">
        <Markup content={html} />

        <script>
            import { createRestAPIClient } from 'masto';

            const masto = createRestAPIClient({
                url: 'https://social.1900.live'
            });

            const app = await masto.v1.apps.create({
                clientName: 'My app',
                redirectUris: location.href,
                scopes: 'read write',
                website: 'social.1900.live'
            });

            console.log(app);
        </script>
    </article>

    <Comments slot="comments" />

    <Relitu slot="relitu" />
</BaseLayout>

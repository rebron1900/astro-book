---
import { pages, settings, neodb } from '../utils/ghost-store.js';

import BaseLayout from '../layouts/BaseLayout.astro';
import Head from '../components/Head.astro';
import Comments from '../components/Comments.astro';
import Relitu from '../components/Relitu.jsx';
import Header from '../components/Header.astro';
import Menu from '../components/Menu.astro';
import PostMeta from '../components/PostMeta.astro';
import { Markup } from 'astro-remote';
import CodeSlot from '../components/CodeSlot.astro';
import IFrameSlot from '../components/IFrameSlot.astro';
import RemotePicture from '../components/RemotePicture.astro';
import Columns from '../components/shortcode/Columns.astro';
import Details from '../components/shortcode/Details.astro';
import Link from '../components/shortcode/Link.astro';
import OGCard from '../components/shortcode/OGCard.astro';
import StravaRelitu from '../components/StravaRelitu.jsx';

const page = pages.find((post) => post.slug == 'strava');

// Fetch running activities from GitHub
const activitiesUrl = 'https://raw.githubusercontent.com/rebron1900/running_page/2aa7902357e6212c61e13a3e7d143d50487d8fc8/src/static/activities.json';
let activities = [];

try {
  const response = await fetch(activitiesUrl);
  if (response.ok) {
    activities = await response.json();
  }
} catch (error) {
  console.error('Failed to fetch activities:', error);
}
---

<BaseLayout post={page}>
    <Head slot="head" post={page} site={settings} title={page?.title + ' | ' + settings?.title + ' - ' + settings?.description} />

    <Header slot="header" title={page.title} />
    <Menu slot="menu" />

    <article slot="content" class="markdown book-article">
        <h1 class="book-title">{page.title}</h1>
        <PostMeta post={page} isFeature={true} />

        <StravaRelitu activities={activities} />
        <script>
            import initMap from '../utils/strava';

            document.addEventListener('astro:page-load', () => {
                initMap();
            });
        </script>
        <div id="map" class="footer-map"></div>

        {
            page.html && (
                <Markup
                    content={page.html}
                    sanitize={{ allowComponents: true, allowCustomElements: true }}
                    components={{ pre: CodeSlot, img: RemotePicture, iframe: IFrameSlot, details: Details, columns: Columns, a: Link, ogcard: OGCard }}
                />
            )
        }
    </article>

    <Comments slot="comments" />

    <Relitu slot="relitu" />
</BaseLayout>

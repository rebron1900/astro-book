---
import { pages, postsAll, settings } from '../../utils/ghost-store.js';
import { getCollection, getEntry } from 'astro:content';
import tocGen from '../../utils/toc.js';

import BaseLayout from '../../layouts/BaseLayout.astro';
import PostMeta from '../../components/PostMeta.astro';
import Head from '../../components/Head.astro';
import Pagination from '../../components/Pagination.astro';
import Comments from '../../components/Comments.astro';
import Toc from '../../components/Toc.astro';
import Relitu from '../../components/Relitu.jsx';
import TocTagloop from '../../components/TocTagloop.astro';
import Header from '../../components/Header.astro';
import Top from '../../components/Top.astro';
import Menu from '../../components/Menu.astro';
import CodeSlot from '../../components/CodeSlot.astro';
import { Markup } from 'astro-remote';
import RemotePicture from '../../components/RemotePicture.astro';
import Footer from '../../components/Footer.astro';

export async function getStaticPaths() {
    const posts = await getCollection('Obsidian');
    const postCount = posts.length;
    return posts.map((post, index) => ({
        params: { slug: post.slug },
        props: {
            post,
            nextPost: index + 1 !== postCount ? posts[index + 1] : null,
            prevPost: index !== 0 ? posts[index - 1] : null
        }
    }));
}

const { post, prevPost, nextPost } = Astro.props;
const { Content, headings } = await post.render();
---

<BaseLayout>
    <Head slot="head" site={settings} title={post?.title + ' | ' + settings?.title + ' - ' + settings?.description} />

    <Header slot="header" title={post.title} />

    <Menu slot="menu" />
    <article slot="content" class="markdown book-article">
        <h1 class="book-title">
            {post.title}
        </h1>
        <Content />
    </article>

    <Comments slot="comments" />

    <Footer slot="footer" post={post} />

    <Relitu slot="relitu" />

    <Fragment slot="toc">
        <Top />
    </Fragment>

    <Fragment slot="h-toc">
        <aside class="hidden clearfix"></aside>
    </Fragment>
</BaseLayout>
